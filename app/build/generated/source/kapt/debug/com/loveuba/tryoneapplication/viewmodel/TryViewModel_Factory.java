// Generated by Dagger (https://dagger.dev).
package com.loveuba.tryoneapplication.viewmodel;

import com.loveuba.tryoneapplication.data.repo.ITryRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TryViewModel_Factory implements Factory<TryViewModel> {
  private final Provider<ITryRepository> repositoryProvider;

  public TryViewModel_Factory(Provider<ITryRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public TryViewModel get() {
    return newInstance(repositoryProvider.get());
  }

  public static TryViewModel_Factory create(Provider<ITryRepository> repositoryProvider) {
    return new TryViewModel_Factory(repositoryProvider);
  }

  public static TryViewModel newInstance(ITryRepository repository) {
    return new TryViewModel(repository);
  }
}
